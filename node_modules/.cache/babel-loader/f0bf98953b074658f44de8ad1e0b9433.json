{"ast":null,"code":"import _slicedToArray from \"/Users/jay/Projects/Projects /Final project/React-Shopping-Cart-master/Shopping-Cart/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jay/Projects/Projects /Final project/React-Shopping-Cart-master/Shopping-Cart/src/components/LoginModal/LoginForm.js\";\nimport React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport { connect } from \"react-redux\";\nimport * as yup from \"yup\";\nimport links from \"../../../src/links\";\nimport axios from \"axios\";\nimport \"./LoginForm.css\";\nvar schema = yup.object({\n  email: yup.string().email().required(),\n  password: yup.string().required()\n});\n\nvar LoginForm = function LoginForm(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1]; // save user email\n\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1]; // save pw\n\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loggedIn = _useState8[0],\n      setLoggedIn = _useState8[1];\n\n  var _handleLogin = function _handleLogin(event) {\n    event.preventDefault();\n    var request = {\n      auth: {\n        email: email,\n        password: password\n      }\n    };\n    axios.post(links.root + \"employer_token\", request).then(function (res) {\n      if (res.status === 201) {\n        setLoggedIn(true);\n        props.dispatch({\n          type: \"SETEMPLOYER\"\n        });\n        localStorage.setItem(\"jwt\", res.data.jwt);\n        localStorage.setItem(\"employer\", true);\n        localStorage.setItem(\"email\", email);\n        setError(false);\n      }\n\n      axios.post(links.root + \"getid\", {\n        email: email\n      }).then(function (res) {\n        localStorage.setItem(\"id\", res.data.id);\n      });\n    }).catch(function (err) {\n      axios.post(links.root + \"student_token\", request).then(function (res) {\n        if (res.status === 201) {\n          setLoggedIn(true);\n          props.dispatch({\n            type: \"SETSTUDENT\"\n          });\n          localStorage.setItem(\"jwt\", res.data.jwt);\n          localStorage.setItem(\"student\", true);\n          localStorage.setItem(\"email\", email);\n          setError(false);\n        }\n\n        axios.post(links.root + \"studentid\", {\n          email: email\n        }).then(function (res) {\n          localStorage.setItem(\"studentID\", res.data.id);\n        });\n      }).catch(function (err) {\n        setError(true);\n      });\n    });\n  };\n\n  var _storeEmail = function _storeEmail(event) {\n    setEmail(event.target.value);\n  };\n\n  var _storePw = function _storePw(event) {\n    setPassword(event.target.value);\n  };\n\n  if (!loggedIn) {\n    return React.createElement(Formik, {\n      validationSchema: schema,\n      onSubmit: console.log,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, function (_ref) {\n      var handleSubmit = _ref.handleSubmit,\n          handleChange = _ref.handleChange,\n          handleBlur = _ref.handleBlur,\n          values = _ref.values,\n          touched = _ref.touched,\n          isValid = _ref.isValid,\n          errors = _ref.errors;\n      return React.createElement(Form, {\n        onChange: handleChange,\n        noValidate: true,\n        action: \"/users\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        id: \"login\",\n        controlId: \"formBasicEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Email address\"), React.createElement(Form.Control, {\n        name: \"email\",\n        value: values.email,\n        isInvalid: !!errors.email,\n        isValid: touched.email && !errors.email,\n        onChange: _storeEmail,\n        type: \"email\",\n        placeholder: \"Enter email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(Form.Text, {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, errors.email ? React.createElement(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, errors.email) : \"We'll never share your email with anyone else.\")), React.createElement(Form.Group, {\n        id: \"login\",\n        controlId: \"formBasicPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Form.Control, {\n        name: \"password\",\n        value: values.password,\n        isInvalid: !!errors.password,\n        isValid: touched.password && !errors.password,\n        onChange: _storePw,\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, errors.password)), React.createElement(Form.Row, {\n        id: \"error-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: _handleLogin,\n        variant: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        id: \"login-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, error ? \"Email or Password incorrect, please try again\" : \"\"))));\n    });\n  }\n\n  if (loggedIn === true) {\n    return React.createElement(Alert, {\n      variant: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Alert.Heading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Login Succesful\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Welcome back GradBay. Search for a grad on the home page or click here to see a full list of the current grads up for auction!\"));\n  }\n}; // export default LoginForm;\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    student: state.student,\n    employer: state.employer\n  };\n};\n\nexport default connect(mapStateToProps)(LoginForm);","map":{"version":3,"sources":["/Users/jay/Projects/Projects /Final project/React-Shopping-Cart-master/Shopping-Cart/src/components/LoginModal/LoginForm.js"],"names":["React","useState","Form","Button","Alert","Formik","connect","yup","links","axios","schema","object","email","string","required","password","LoginForm","props","setEmail","setPassword","error","setError","loggedIn","setLoggedIn","_handleLogin","event","preventDefault","request","auth","post","root","then","res","status","dispatch","type","localStorage","setItem","data","jwt","id","catch","err","_storeEmail","target","value","_storePw","console","log","handleSubmit","handleChange","handleBlur","values","touched","isValid","errors","color","mapStateToProps","state","student","employer"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport { connect } from \"react-redux\";\nimport * as yup from \"yup\";\nimport links from \"../../../src/links\";\nimport axios from \"axios\";\nimport \"./LoginForm.css\";\n\nconst schema = yup.object({\n  email: yup\n    .string()\n    .email()\n    .required(),\n  password: yup.string().required()\n});\n\nconst LoginForm = props => {\n  const [email, setEmail] = useState(\"\"); // save user email\n  const [password, setPassword] = useState(\"\"); // save pw\n  const [error, setError] = useState(\"\");\n  const [loggedIn, setLoggedIn] = useState(\"\");\n\n  const _handleLogin = event => {\n    event.preventDefault();\n\n    const request = { auth: { email, password } };\n\n    axios\n      .post(links.root + \"employer_token\", request)\n      .then(res => {\n        if (res.status === 201) {\n          setLoggedIn(true);\n          props.dispatch({ type: \"SETEMPLOYER\" });\n          localStorage.setItem(\"jwt\", res.data.jwt);\n          localStorage.setItem(\"employer\", true);\n          localStorage.setItem(\"email\", email);\n          setError(false);\n        }\n        axios.post(links.root + \"getid\", { email }).then(res => {\n          localStorage.setItem(\"id\", res.data.id);\n        });\n      })\n      .catch(err => {\n        axios\n          .post(links.root + \"student_token\", request)\n          .then(res => {\n            if (res.status === 201) {\n              setLoggedIn(true);\n              props.dispatch({ type: \"SETSTUDENT\" });\n              localStorage.setItem(\"jwt\", res.data.jwt);\n              localStorage.setItem(\"student\", true);\n              localStorage.setItem(\"email\", email);\n              setError(false);\n            }\n            axios.post(links.root + \"studentid\", { email }).then(res => {\n              localStorage.setItem(\"studentID\", res.data.id);\n            });\n          })\n          .catch(err => {\n            setError(true);\n          });\n      });\n  };\n\n  const _storeEmail = event => {\n    setEmail(event.target.value);\n  };\n\n  const _storePw = event => {\n    setPassword(event.target.value);\n  };\n  if (!loggedIn) {\n    return (\n      <Formik validationSchema={schema} onSubmit={console.log}>\n        {({\n          handleSubmit,\n          handleChange,\n          handleBlur,\n          values,\n          touched,\n          isValid,\n          errors\n        }) => (\n          <Form onChange={handleChange} noValidate action=\"/users\">\n            <Form.Group id=\"login\" controlId=\"formBasicEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                name=\"email\"\n                value={values.email}\n                isInvalid={!!errors.email}\n                isValid={touched.email && !errors.email}\n                onChange={_storeEmail}\n                type=\"email\"\n                placeholder=\"Enter email\"\n              />\n              <Form.Text className=\"text-muted\">\n                {errors.email ? (\n                  <p style={{ color: \"red\" }}>{errors.email}</p>\n                ) : (\n                  \"We'll never share your email with anyone else.\"\n                )}\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group id=\"login\" controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                name=\"password\"\n                value={values.password}\n                isInvalid={!!errors.password}\n                isValid={touched.password && !errors.password}\n                onChange={_storePw}\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.password}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Row id=\"error-row\">\n              <Button onClick={_handleLogin} variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n              <div>\n                <p id=\"login-error\">\n                  {error ? \"Email or Password incorrect, please try again\" : \"\"}\n                </p>\n              </div>\n            </Form.Row>\n          </Form>\n        )}\n      </Formik>\n    );\n  }\n  if (loggedIn === true) {\n    return (\n      <Alert variant=\"success\">\n        <Alert.Heading>Login Succesful</Alert.Heading>\n        <p>\n          Welcome back GradBay. Search for a grad on the home page or click here\n          to see a full list of the current grads up for auction!\n        </p>\n      </Alert>\n    );\n  }\n};\n\n// export default LoginForm;\n\nconst mapStateToProps = state => {\n  return {\n    student: state.student,\n    employer: state.employer\n  };\n};\n\nexport default connect(mapStateToProps)(LoginForm);\n"]},"metadata":{},"sourceType":"module"}