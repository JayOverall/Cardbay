{"ast":null,"code":"import _slicedToArray from \"/Users/jay/Projects/Projects /Final project/React-Shopping-Cart-master/Shopping-Cart/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jay/Projects/Projects /Final project/React-Shopping-Cart-master/Shopping-Cart/src/components/LoginModal/EmployerSignUpForm.js\";\nimport React, { useState } from \"react\";\nimport { Form, Button, InputGroup, Alert } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport \"./LoginModal.css\";\nimport { connect } from \"react-redux\";\nimport links from \"../../links\";\nvar schema = yup.object({\n  firstName: yup.string().required(),\n  lastName: yup.string().required(),\n  email: yup.string().email().required(),\n  company: yup.string().required(),\n  password: yup.string().required(\"Password is required\"),\n  passwordConfirmation: yup.string().oneOf([yup.ref(\"password\"), null], \"Passwords must match\") // terms: yup.bool().required(),\n\n});\n\nvar EmployerSignUpForm = function EmployerSignUpForm(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      firstName = _useState2[0],\n      setFirstName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lastName = _useState4[0],\n      setLastName = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      company = _useState8[0],\n      setCompany = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      password = _useState10[0],\n      setPassword = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      passwordConfirmation = _useState12[0],\n      setPasswordConfirmation = _useState12[1];\n\n  var _useState13 = useState(\"GO\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      error = _useState14[0],\n      setError = _useState14[1]; // error handling for rendering\n\n\n  var _handleSubmit = function _handleSubmit(event) {\n    event.preventDefault();\n    var request = {\n      first_name: firstName,\n      last_name: lastName,\n      email: email,\n      company: company,\n      password: password,\n      password_confirmation: passwordConfirmation\n    };\n    axios.post(links.root + \"employer/create\", request).then(function (res) {\n      if (res.status === 200) {\n        setError(false);\n        localStorage.setItem(\"id\", res.data.id);\n        props.dispatch({\n          type: \"SETEMPLOYER\"\n        });\n      }\n\n      axios.post(links.root + \"employer_token\", {\n        auth: {\n          email: email,\n          password: password\n        }\n      }).then(function (res) {\n        localStorage.setItem(\"jwt\", res.data.jwt);\n        localStorage.setItem(\"employer\", true);\n        localStorage.setItem(\"email\", email);\n      });\n    }).catch(function (err) {\n      setError(true);\n    });\n  };\n\n  if (error) {\n    return React.createElement(Formik, {\n      validationSchema: schema // onSubmit={console.log}\n      ,\n      initialValues: {// firstName: 'Mark',\n        // lastName: 'Otto',\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, function (_ref) {\n      var handleSubmit = _ref.handleSubmit,\n          handleChange = _ref.handleChange,\n          handleBlur = _ref.handleBlur,\n          values = _ref.values,\n          touched = _ref.touched,\n          isValid = _ref.isValid,\n          errors = _ref.errors;\n      return React.createElement(Form, {\n        onChange: handleChange,\n        noValidate: true,\n        onSubmit: _handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        md: \"4\",\n        controlId: \"validationFormik01\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"First name\"), React.createElement(Form.Control, {\n        type: \"text\",\n        name: \"firstName\",\n        placeholder: \"John\",\n        value: values.firstName,\n        onChange: function onChange(e) {\n          return setFirstName(e.target.value);\n        },\n        isValid: touched.firstName && !errors.firstName,\n        isInvalid: !!errors.firstName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Looks good!\")), React.createElement(Form.Group, {\n        md: \"4\",\n        controlId: \"validationFormik02\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Last name\"), React.createElement(Form.Control, {\n        type: \"text\",\n        name: \"lastName\",\n        placeholder: \"Smith\",\n        value: values.lastName,\n        onChange: function onChange(e) {\n          return setLastName(e.target.value);\n        },\n        isValid: touched.firstName && !errors.lastName,\n        isInvalid: !!errors.lastName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Looks good!\"))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        id: \"email\",\n        md: \"4\",\n        controlId: \"validationFormikEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Email\"), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(InputGroup.Prepend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(InputGroup.Text, {\n        id: \"inputGroupPrepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"@\")), React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"example@gmail.com\",\n        \"aria-describedby\": \"inputGroupPrepend\",\n        name: \"email\",\n        value: values.email,\n        onChange: function onChange(e) {\n          return setEmail(e.target.value);\n        },\n        isInvalid: !!errors.email,\n        isValid: touched.email && !errors.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, errors.email))), React.createElement(Form.Group, {\n        id: \"company\",\n        md: \"6\",\n        controlId: \"validationFormik03\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Company\"), React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"Google\",\n        name: \"company\",\n        value: values.company,\n        onChange: function onChange(e) {\n          return setCompany(e.target.value);\n        },\n        isValid: touched.company && !errors.company,\n        isInvalid: !!errors.company,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, errors.company))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        id: \"password\",\n        md: \"3\",\n        controlId: \"validationFormik04\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Form.Control, {\n        type: \"password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        value: values.password,\n        onChange: function onChange(e) {\n          return setPassword(e.target.value);\n        },\n        isInvalid: !!errors.password,\n        isValid: touched.password && !errors.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, errors.password)), React.createElement(Form.Group, {\n        id: \"password-confirm\",\n        md: \"3\",\n        controlId: \"validationFormik05\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Password Confirmation\"), React.createElement(Form.Control, {\n        type: \"password\",\n        placeholder: \"Confirm\",\n        name: \"passwordConfirmation\",\n        value: values.passwordConfirmation,\n        onChange: function onChange(e) {\n          return setPasswordConfirmation(e.target.value);\n        },\n        isInvalid: !!errors.passwordConfirmation,\n        isValid: touched.passwordConfirmation && !errors.passwordConfirmation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, errors.passwordConfirmation))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Form.Check, {\n        required: true,\n        name: \"terms\",\n        label: \"Agree to terms and conditions\",\n        onChange: handleChange,\n        isInvalid: !!errors.terms,\n        feedback: errors.terms,\n        id: \"validationFormik0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      })), error === true ? React.createElement(\"div\", {\n        id: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"That Email is Already In Use, Please Try Again.\") : \"\"), React.createElement(Button, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Submit form\"));\n    });\n  } else if (error === false) {\n    return React.createElement(Alert, {\n      variant: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(Alert.Heading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Account Successfully Created\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Welcome to GradBay. Search for a grad on the home page or click here to see a full list of the current grads up for auction!\"));\n  }\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    employer: state.employer\n  };\n};\n\nexport default connect(mapStateToProps)(EmployerSignUpForm);","map":{"version":3,"sources":["/Users/jay/Projects/Projects /Final project/React-Shopping-Cart-master/Shopping-Cart/src/components/LoginModal/EmployerSignUpForm.js"],"names":["React","useState","Form","Button","InputGroup","Alert","Formik","yup","axios","connect","links","schema","object","firstName","string","required","lastName","email","company","password","passwordConfirmation","oneOf","ref","EmployerSignUpForm","props","setFirstName","setLastName","setEmail","setCompany","setPassword","setPasswordConfirmation","error","setError","_handleSubmit","event","preventDefault","request","first_name","last_name","password_confirmation","post","root","then","res","status","localStorage","setItem","data","id","dispatch","type","auth","jwt","catch","err","handleSubmit","handleChange","handleBlur","values","touched","isValid","errors","e","target","value","terms","mapStateToProps","state","employer"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button, InputGroup, Alert } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport \"./LoginModal.css\";\nimport { connect } from \"react-redux\";\n\nimport links from \"../../links\";\n\nconst schema = yup.object({\n  firstName: yup.string().required(),\n  lastName: yup.string().required(),\n  email: yup\n    .string()\n    .email()\n    .required(),\n  company: yup.string().required(),\n  password: yup.string().required(\"Password is required\"),\n  passwordConfirmation: yup\n    .string()\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\")\n\n  // terms: yup.bool().required(),\n});\n\nconst EmployerSignUpForm = props => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n\n  const [error, setError] = useState(\"GO\"); // error handling for rendering\n\n  const _handleSubmit = event => {\n    event.preventDefault();\n\n    const request = {\n      first_name: firstName,\n      last_name: lastName,\n      email,\n      company,\n      password,\n      password_confirmation: passwordConfirmation\n    };\n\n    axios\n      .post(links.root + \"employer/create\", request)\n      .then(res => {\n        if (res.status === 200) {\n          setError(false);\n          localStorage.setItem(\"id\", res.data.id);\n          props.dispatch({ type: \"SETEMPLOYER\" });\n        }\n\n        axios\n          .post(links.root + \"employer_token\", { auth: { email, password } })\n          .then(res => {\n            localStorage.setItem(\"jwt\", res.data.jwt);\n            localStorage.setItem(\"employer\", true);\n            localStorage.setItem(\"email\", email);\n          });\n      })\n      .catch(err => {\n        setError(true);\n      });\n  };\n\n  if (error) {\n    return (\n      <Formik\n        validationSchema={schema}\n        // onSubmit={console.log}\n        initialValues={\n          {\n            // firstName: 'Mark',\n            // lastName: 'Otto',\n          }\n        }\n      >\n        {({\n          handleSubmit,\n          handleChange,\n          handleBlur,\n          values,\n          touched,\n          isValid,\n          errors\n        }) => (\n          <Form onChange={handleChange} noValidate onSubmit={_handleSubmit}>\n            <Form.Row>\n              <Form.Group md=\"4\" controlId=\"validationFormik01\">\n                <Form.Label>First name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"firstName\"\n                  placeholder=\"John\"\n                  value={values.firstName}\n                  onChange={e => setFirstName(e.target.value)}\n                  isValid={touched.firstName && !errors.firstName}\n                  isInvalid={!!errors.firstName}\n                />\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group md=\"4\" controlId=\"validationFormik02\">\n                <Form.Label>Last name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"lastName\"\n                  placeholder=\"Smith\"\n                  value={values.lastName}\n                  onChange={e => setLastName(e.target.value)}\n                  isValid={touched.firstName && !errors.lastName}\n                  isInvalid={!!errors.lastName}\n                />\n\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group id=\"email\" md=\"4\" controlId=\"validationFormikEmail\">\n                <Form.Label>Email</Form.Label>\n                <InputGroup>\n                  <InputGroup.Prepend>\n                    <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"example@gmail.com\"\n                    aria-describedby=\"inputGroupPrepend\"\n                    name=\"email\"\n                    value={values.email}\n                    onChange={e => setEmail(e.target.value)}\n                    isInvalid={!!errors.email}\n                    isValid={touched.email && !errors.email}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.email}\n                  </Form.Control.Feedback>\n                </InputGroup>\n              </Form.Group>\n\n              <Form.Group id=\"company\" md=\"6\" controlId=\"validationFormik03\">\n                <Form.Label>Company</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Google\"\n                  name=\"company\"\n                  value={values.company}\n                  onChange={e => setCompany(e.target.value)}\n                  isValid={touched.company && !errors.company}\n                  isInvalid={!!errors.company}\n                />\n\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.company}\n                </Form.Control.Feedback>\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n              <Form.Group id=\"password\" md=\"3\" controlId=\"validationFormik04\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  value={values.password}\n                  onChange={e => setPassword(e.target.value)}\n                  isInvalid={!!errors.password}\n                  isValid={touched.password && !errors.password}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.password}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group\n                id=\"password-confirm\"\n                md=\"3\"\n                controlId=\"validationFormik05\"\n              >\n                <Form.Label>Password Confirmation</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Confirm\"\n                  name=\"passwordConfirmation\"\n                  value={values.passwordConfirmation}\n                  onChange={e => setPasswordConfirmation(e.target.value)}\n                  isInvalid={!!errors.passwordConfirmation}\n                  isValid={\n                    touched.passwordConfirmation && !errors.passwordConfirmation\n                  }\n                />\n\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.passwordConfirmation}\n                </Form.Control.Feedback>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group>\n                <Form.Check\n                  required\n                  name=\"terms\"\n                  label=\"Agree to terms and conditions\"\n                  onChange={handleChange}\n                  isInvalid={!!errors.terms}\n                  feedback={errors.terms}\n                  id=\"validationFormik0\"\n                />\n              </Form.Group>\n              {error === true ? (\n                <div id=\"error\">\n                  That Email is Already In Use, Please Try Again.\n                </div>\n              ) : (\n                \"\"\n              )}\n            </Form.Row>\n            <Button type=\"submit\">Submit form</Button>\n          </Form>\n        )}\n      </Formik>\n    );\n  } else if (error === false) {\n    return (\n      <Alert variant=\"success\">\n        <Alert.Heading>Account Successfully Created</Alert.Heading>\n        <p>\n          Welcome to GradBay. Search for a grad on the home page or click here\n          to see a full list of the current grads up for auction!\n        </p>\n      </Alert>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    employer: state.employer\n  };\n};\n\nexport default connect(mapStateToProps)(EmployerSignUpForm);\n"]},"metadata":{},"sourceType":"module"}