{"ast":null,"code":"import _slicedToArray from \"/Users/jay/Projects/Projects /Final project/React-Shopping-Cart-master/Shopping-Cart/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jay/Projects/Projects /Final project/React-Shopping-Cart-master/Shopping-Cart/src/components/LoginModal/StudentSignUpForm.js\";\nimport React, { useState } from \"react\";\nimport { Form, Button, InputGroup } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport \"./LoginModal.css\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport links from \"../../../src/links\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { connect } from \"react-redux\";\nimport SignUpProfile from \"./SignUpProfile\";\nimport datehelper from \"../../helper/datehelper\";\nvar schema = yup.object({\n  firstName: yup.string().required(),\n  lastName: yup.string().required(),\n  email: yup.string().email().required(),\n  university: yup.string().required(),\n  gpa: yup.number().required().positive(),\n  reserve: yup.number().required().positive().integer(),\n  duration: yup.number().required().positive().integer(),\n  password: yup.string().required(\"Password is required\"),\n  // profilePhoto: yup.meta(),\n  passwordConfirmation: yup.string().oneOf([yup.ref(\"password\"), null], \"Passwords must match\")\n});\n\nvar StudentSignUpForm = function StudentSignUpForm(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      firstName = _useState2[0],\n      setFirstName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lastName = _useState4[0],\n      setLastName = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      university = _useState8[0],\n      setUniversity = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      gpa = _useState10[0],\n      setGPA = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      reserve = _useState12[0],\n      setReserve = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      auction = _useState14[0],\n      setAuctionEnd = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      password = _useState16[0],\n      setPassword = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      passwordConfirmation = _useState18[0],\n      setPasswordConfirmation = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      id = _useState20[0],\n      setId = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      day = _useState22[0],\n      setDays = _useState22[1];\n\n  var _useState23 = useState(\"\"),\n      _useState24 = _slicedToArray(_useState23, 2),\n      hour = _useState24[0],\n      setHours = _useState24[1];\n\n  var _useState25 = useState(\"\"),\n      _useState26 = _slicedToArray(_useState25, 2),\n      minute = _useState26[0],\n      setMinutes = _useState26[1];\n\n  var _useState27 = useState(\"\"),\n      _useState28 = _slicedToArray(_useState27, 2),\n      second = _useState28[0],\n      setSeconds = _useState28[1];\n\n  var _useState29 = useState(\"\"),\n      _useState30 = _slicedToArray(_useState29, 2),\n      cv = _useState30[0],\n      setCV = _useState30[1];\n\n  var _useState31 = useState(\"\"),\n      _useState32 = _slicedToArray(_useState31, 2),\n      profilePhoto = _useState32[0],\n      setProfilePhoto = _useState32[1]; // for later\n\n\n  var _useState33 = useState(\"GO\"),\n      _useState34 = _slicedToArray(_useState33, 2),\n      error = _useState34[0],\n      setError = _useState34[1]; // for signup errors\n\n\n  var _useState35 = useState(false),\n      _useState36 = _slicedToArray(_useState35, 2),\n      loading = _useState36[0],\n      setLoading = _useState36[1]; // for the loading icon\n\n\n  var timeDisplay = function timeDisplay(db_time) {\n    // this converts the time to dd,hh,mm,ss\n    setInterval(function () {\n      var timeNow = moment.utc();\n      var auctionEnd = moment(db_time);\n      var milliseconds = auctionEnd.diff(timeNow); // set state\n\n      var dif = datehelper(milliseconds, \"days\");\n      var d = dif.d,\n          h = dif.h,\n          m = dif.m,\n          s = dif.s;\n      setDays(d);\n      setHours(h);\n      setMinutes(m);\n      setSeconds(s);\n    }, 1000);\n  };\n\n  var _getInputs = function _getInputs(event) {\n    event.preventDefault();\n    setLoading(true); // convert auction time to date format - this is the time the auction should end.\n\n    var auction_convert = function auction_convert(days) {\n      var time = moment.utc().add(days, \"days\").format(); // time = time.split(\"Z\");\n      // time = time[0].split(\"T\").join(\" \");\n\n      return time;\n    };\n\n    var fd = new FormData();\n    fd.append(\"profile_photo\", profilePhoto);\n    fd.append(\"first_name\", firstName);\n    fd.append(\"last_name\", lastName);\n    fd.append(\"email\", email);\n    fd.append(\"university\", university);\n    fd.append(\"gpa\", gpa);\n    fd.append(\"reserve_price\", reserve);\n    fd.append(\"auction_duration\", auction_convert(auction));\n    fd.append(\"password\", password);\n    fd.append(\"password_confirmation\", passwordConfirmation);\n    fd.append(\"cv\", cv);\n    axios.post(links.root + \"students/create\", fd).then(function (res) {\n      // console.log(res.data.auction_duration); #2\n      if (res.status === 200) {\n        var _res$data = res.data,\n            profile_photo = _res$data.profile_photo,\n            _id = _res$data.id,\n            auction_duration = _res$data.auction_duration;\n        setProfilePhoto(profile_photo);\n        setId(_id);\n        localStorage.setItem(\"studentID\", _id);\n        setError(false);\n        timeDisplay(auction_duration);\n        setLoading(false);\n      }\n\n      axios.post(links.root + \"student_token\", {\n        auth: {\n          email: email,\n          password: password\n        }\n      }).then(function (res) {\n        props.dispatch({\n          type: \"SETSTUDENT\"\n        });\n        localStorage.setItem(\"jwt\", res.data.jwt);\n        localStorage.setItem(\"student\", true);\n        localStorage.setItem(\"email\", email);\n      });\n    }).catch(function (err) {\n      setError(true);\n      setLoading(false);\n    });\n  };\n\n  if (loading === true) {\n    return React.createElement(\"div\", {\n      className: \"mx-auto\",\n      id: \"spinner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      className: \"fa-spin mx-auto fa-5x\",\n      icon: \"spinner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }));\n  } else if (error) {\n    return React.createElement(Formik, {\n      validationSchema: schema,\n      onSubmit: console.log,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, function (_ref) {\n      var handleSubmit = _ref.handleSubmit,\n          handleChange = _ref.handleChange,\n          handleBlur = _ref.handleBlur,\n          values = _ref.values,\n          touched = _ref.touched,\n          isValid = _ref.isValid,\n          errors = _ref.errors;\n      return React.createElement(Form, {\n        onChange: handleChange,\n        noValidate: true,\n        onSubmit: _getInputs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        md: \"4\",\n        controlId: \"validationFormik01\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"First name\"), React.createElement(Form.Control, {\n        type: \"text\",\n        name: \"firstName\",\n        placeholder: \"John\",\n        value: values.firstName // onChange={handleChange}\n        ,\n        isValid: touched.firstName && !errors.firstName,\n        isInvalid: !!errors.firstName,\n        onChange: function onChange(event) {\n          return setFirstName(event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, errors.firstName)), React.createElement(Form.Group, {\n        md: \"4\",\n        controlId: \"validationFormik02\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Last name\"), React.createElement(Form.Control, {\n        type: \"text\",\n        name: \"lastName\",\n        placeholder: \"Smith\",\n        value: values.lastName,\n        onChange: function onChange(event) {\n          return setLastName(event.target.value);\n        },\n        isValid: touched.lastName && !errors.lastName,\n        isInvalid: !!errors.lastName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, errors.lastName))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        id: \"email\",\n        md: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Email\"), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(InputGroup.Prepend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(InputGroup.Text, {\n        id: \"inputGroupPrepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"@\")), React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"example@gmail.com\",\n        \"aria-describedby\": \"inputGroupPrepend\",\n        name: \"email\",\n        value: values.email // onChange={handleChange}\n        ,\n        onChange: function onChange(event) {\n          return setEmail(event.target.value);\n        },\n        isInvalid: !!errors.email,\n        isValid: touched.email && !errors.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, errors.email)))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        id: \"university\",\n        md: \"6\",\n        controlId: \"validationFormik03\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"University\"), React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"University\",\n        name: \"university\",\n        value: values.university,\n        maxLength: \"24\" // onChange={handleChange}\n        ,\n        onChange: function onChange(event) {\n          return setUniversity(event.target.value);\n        },\n        isInvalid: !!errors.university,\n        isValid: touched.university && !errors.university,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, errors.university)), React.createElement(Form.Group, {\n        id: \"gpa\",\n        md: \"6\",\n        controlId: \"validationFormik04\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"GPA\"), React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"4.0\",\n        name: \"gpa\",\n        value: values.gpa // onChange={handleChange}\n        ,\n        onChange: function onChange(event) {\n          return setGPA(event.target.value);\n        },\n        isInvalid: !!errors.gpa,\n        isValid: touched.gpa && !errors.gpa,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"Please enter a valid number\"))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        id: \"reserve\",\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, \"Reserve Salary\"), React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"$40,000\",\n        name: \"reserve\",\n        value: values.reserve // onChange={handleChange}\n        ,\n        onChange: function onChange(event) {\n          return setReserve(event.target.value);\n        },\n        isInvalid: !!errors.reserve,\n        isValid: touched.reserve && !errors.reserve,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \"Please enter a valid number\")), React.createElement(Form.Group, {\n        id: \"duration\",\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"Auction Duration ( days )\"), React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"7\",\n        name: \"duration\",\n        value: values.duration,\n        onChange: function onChange(event) {\n          return setAuctionEnd(event.target.value);\n        },\n        isInvalid: !!errors.duration,\n        isValid: touched.duration && !errors.duration,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, errors.duration))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        id: \"profile-photo\",\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, \"Upload a Profile Photo\"), React.createElement(Form.Control, {\n        type: \"file\",\n        accept: \".jpg, .jpeg, .png\",\n        name: \"profile-photo\",\n        value: values.profilePhoto // onChange={handleChange}\n        ,\n        onChange: function onChange(event) {\n          return setProfilePhoto(event.target.files[0]);\n        },\n        isInvalid: !!errors.profilePhoto,\n        isValid: touched.profilePhoto && !errors.profilePhoto,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, \"Please upload a file\")), React.createElement(Form.Group, {\n        id: \"cv\",\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, \"Upload a CV\"), React.createElement(Form.Control, {\n        type: \"file\",\n        accept: \".pdf, .doc, .docx\",\n        name: \"cv\",\n        value: values.cv,\n        onChange: function onChange(event) {\n          return setCV(event.target.files[0]);\n        },\n        isInvalid: !!errors.cv,\n        isValid: touched.cv && !errors.cv,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, errors.cv))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        id: \"password\",\n        md: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Form.Control, {\n        type: \"password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        value: values.password,\n        onChange: function onChange(event) {\n          return setPassword(event.target.value);\n        },\n        isInvalid: !!errors.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, errors.password)), React.createElement(Form.Group, {\n        id: \"password-confirm\",\n        md: \"3\",\n        controlId: \"validationFormik06\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, \"Password Confirmation\"), React.createElement(Form.Control, {\n        type: \"password\",\n        placeholder: \"Confirm\",\n        name: \"passwordConfirmation\",\n        value: values.passwordConfirmation,\n        onChange: function onChange(event) {\n          return setPasswordConfirmation(event.target.value);\n        },\n        isInvalid: !!errors.passwordConfirmation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, errors.passwordConfirmation))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, React.createElement(Form.Check, {\n        required: true,\n        name: \"terms\",\n        label: \"Agree to terms and conditions\",\n        onChange: handleChange,\n        isInvalid: !!errors.terms,\n        feedback: errors.terms,\n        id: \"validationFormik0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      })), error === true ? React.createElement(\"div\", {\n        id: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, \"Error: make sure you have filled out all details.\") : \"\"), React.createElement(Button, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, \"Submit form\"));\n    });\n  } else if (error === false) {\n    return React.createElement(SignUpProfile, {\n      profilePhoto: profilePhoto,\n      reserve: reserve,\n      day: day,\n      hour: hour,\n      minute: minute,\n      second: second,\n      id: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    });\n  }\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    student: state.student\n  };\n};\n\nexport default connect(mapStateToProps)(StudentSignUpForm);","map":{"version":3,"sources":["/Users/jay/Projects/Projects /Final project/React-Shopping-Cart-master/Shopping-Cart/src/components/LoginModal/StudentSignUpForm.js"],"names":["React","useState","Form","Button","InputGroup","Formik","yup","axios","moment","links","FontAwesomeIcon","connect","SignUpProfile","datehelper","schema","object","firstName","string","required","lastName","email","university","gpa","number","positive","reserve","integer","duration","password","passwordConfirmation","oneOf","ref","StudentSignUpForm","props","setFirstName","setLastName","setEmail","setUniversity","setGPA","setReserve","auction","setAuctionEnd","setPassword","setPasswordConfirmation","id","setId","day","setDays","hour","setHours","minute","setMinutes","second","setSeconds","cv","setCV","profilePhoto","setProfilePhoto","error","setError","loading","setLoading","timeDisplay","db_time","setInterval","timeNow","utc","auctionEnd","milliseconds","diff","dif","d","h","m","s","_getInputs","event","preventDefault","auction_convert","days","time","add","format","fd","FormData","append","post","root","then","res","status","data","profile_photo","auction_duration","localStorage","setItem","auth","dispatch","type","jwt","catch","err","console","log","handleSubmit","handleChange","handleBlur","values","touched","isValid","errors","target","value","files","terms","mapStateToProps","state","student"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button, InputGroup } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport \"./LoginModal.css\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport links from \"../../../src/links\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { connect } from \"react-redux\";\nimport SignUpProfile from \"./SignUpProfile\";\nimport datehelper from \"../../helper/datehelper\";\n\nconst schema = yup.object({\n  firstName: yup.string().required(),\n  lastName: yup.string().required(),\n  email: yup\n    .string()\n    .email()\n    .required(),\n  university: yup.string().required(),\n  gpa: yup\n    .number()\n    .required()\n    .positive(),\n  reserve: yup\n    .number()\n    .required()\n    .positive()\n    .integer(),\n  duration: yup\n    .number()\n    .required()\n    .positive()\n    .integer(),\n  password: yup.string().required(\"Password is required\"),\n  // profilePhoto: yup.meta(),\n  passwordConfirmation: yup\n    .string()\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\")\n});\n\nconst StudentSignUpForm = props => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [university, setUniversity] = useState(\"\");\n  const [gpa, setGPA] = useState(\"\");\n  const [reserve, setReserve] = useState(\"\");\n  const [auction, setAuctionEnd] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const [day, setDays] = useState(\"\");\n  const [hour, setHours] = useState(\"\");\n  const [minute, setMinutes] = useState(\"\");\n  const [second, setSeconds] = useState(\"\");\n  const [cv, setCV] = useState(\"\");\n\n  const [profilePhoto, setProfilePhoto] = useState(\"\"); // for later\n\n  const [error, setError] = useState(\"GO\"); // for signup errors\n\n  const [loading, setLoading] = useState(false); // for the loading icon\n\n  const timeDisplay = db_time => {\n    // this converts the time to dd,hh,mm,ss\n    setInterval(() => {\n      let timeNow = moment.utc();\n      let auctionEnd = moment(db_time);\n      let milliseconds = auctionEnd.diff(timeNow);\n      // set state\n      const dif = datehelper(milliseconds, \"days\");\n      const { d, h, m, s } = dif;\n      setDays(d);\n      setHours(h);\n      setMinutes(m);\n      setSeconds(s);\n    }, 1000);\n  };\n\n  const _getInputs = event => {\n    event.preventDefault();\n    setLoading(true);\n\n    // convert auction time to date format - this is the time the auction should end.\n    const auction_convert = days => {\n      let time = moment\n        .utc()\n        .add(days, \"days\")\n        .format();\n      // time = time.split(\"Z\");\n      // time = time[0].split(\"T\").join(\" \");\n      return time;\n    };\n\n    let fd = new FormData();\n    fd.append(\"profile_photo\", profilePhoto);\n    fd.append(\"first_name\", firstName);\n    fd.append(\"last_name\", lastName);\n    fd.append(\"email\", email);\n    fd.append(\"university\", university);\n    fd.append(\"gpa\", gpa);\n    fd.append(\"reserve_price\", reserve);\n    fd.append(\"auction_duration\", auction_convert(auction));\n    fd.append(\"password\", password);\n    fd.append(\"password_confirmation\", passwordConfirmation);\n    fd.append(\"cv\", cv);\n\n    axios\n      .post(links.root + \"students/create\", fd)\n      .then(res => {\n        // console.log(res.data.auction_duration); #2\n        if (res.status === 200) {\n          const { profile_photo, id, auction_duration } = res.data;\n          setProfilePhoto(profile_photo);\n          setId(id);\n          localStorage.setItem(\"studentID\", id);\n          setError(false);\n          timeDisplay(auction_duration);\n          setLoading(false);\n        }\n\n        axios\n          .post(links.root + \"student_token\", { auth: { email, password } })\n          .then(res => {\n            props.dispatch({ type: \"SETSTUDENT\" });\n            localStorage.setItem(\"jwt\", res.data.jwt);\n            localStorage.setItem(\"student\", true);\n            localStorage.setItem(\"email\", email);\n          });\n      })\n      .catch(err => {\n        setError(true);\n        setLoading(false);\n      });\n  };\n\n  if (loading === true) {\n    return (\n      <div className=\"mx-auto\" id=\"spinner\">\n        <FontAwesomeIcon className=\"fa-spin mx-auto fa-5x\" icon=\"spinner\" />\n      </div>\n    );\n  } else if (error) {\n    return (\n      <Formik validationSchema={schema} onSubmit={console.log}>\n        {({\n          handleSubmit,\n          handleChange,\n          handleBlur,\n          values,\n          touched,\n          isValid,\n          errors\n        }) => (\n          <Form onChange={handleChange} noValidate onSubmit={_getInputs}>\n            <Form.Row>\n              <Form.Group md=\"4\" controlId=\"validationFormik01\">\n                <Form.Label>First name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"firstName\"\n                  placeholder=\"John\"\n                  value={values.firstName}\n                  // onChange={handleChange}\n                  isValid={touched.firstName && !errors.firstName}\n                  isInvalid={!!errors.firstName}\n                  onChange={event => setFirstName(event.target.value)}\n                />\n                <Form.Control.Feedback>\n                  {errors.firstName}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group md=\"4\" controlId=\"validationFormik02\">\n                <Form.Label>Last name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"lastName\"\n                  placeholder=\"Smith\"\n                  value={values.lastName}\n                  onChange={event => setLastName(event.target.value)}\n                  isValid={touched.lastName && !errors.lastName}\n                  isInvalid={!!errors.lastName}\n                />\n\n                <Form.Control.Feedback>{errors.lastName}</Form.Control.Feedback>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group id=\"email\" md=\"4\">\n                <Form.Label>Email</Form.Label>\n                <InputGroup>\n                  <InputGroup.Prepend>\n                    <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"example@gmail.com\"\n                    aria-describedby=\"inputGroupPrepend\"\n                    name=\"email\"\n                    value={values.email}\n                    // onChange={handleChange}\n                    onChange={event => setEmail(event.target.value)}\n                    isInvalid={!!errors.email}\n                    isValid={touched.email && !errors.email}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.email}\n                  </Form.Control.Feedback>\n                </InputGroup>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group id=\"university\" md=\"6\" controlId=\"validationFormik03\">\n                <Form.Label>University</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"University\"\n                  name=\"university\"\n                  value={values.university}\n                  maxLength=\"24\"\n                  // onChange={handleChange}\n                  onChange={event => setUniversity(event.target.value)}\n                  isInvalid={!!errors.university}\n                  isValid={touched.university && !errors.university}\n                />\n\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.university}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group id=\"gpa\" md=\"6\" controlId=\"validationFormik04\">\n                <Form.Label>GPA</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"4.0\"\n                  name=\"gpa\"\n                  value={values.gpa}\n                  // onChange={handleChange}\n                  onChange={event => setGPA(event.target.value)}\n                  isInvalid={!!errors.gpa}\n                  isValid={touched.gpa && !errors.gpa}\n                />\n\n                <Form.Control.Feedback type=\"invalid\">\n                  Please enter a valid number\n                </Form.Control.Feedback>\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n              <Form.Group id=\"reserve\" md=\"6\">\n                <Form.Label>Reserve Salary</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"$40,000\"\n                  name=\"reserve\"\n                  value={values.reserve}\n                  // onChange={handleChange}\n                  onChange={event => setReserve(event.target.value)}\n                  isInvalid={!!errors.reserve}\n                  isValid={touched.reserve && !errors.reserve}\n                />\n\n                <Form.Control.Feedback type=\"invalid\">\n                  Please enter a valid number\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group id=\"duration\" md=\"6\">\n                <Form.Label>Auction Duration ( days )</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"7\"\n                  name=\"duration\"\n                  value={values.duration}\n                  onChange={event => setAuctionEnd(event.target.value)}\n                  isInvalid={!!errors.duration}\n                  isValid={touched.duration && !errors.duration}\n                />\n\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.duration}\n                </Form.Control.Feedback>\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n              <Form.Group id=\"profile-photo\" md=\"6\">\n                <Form.Label>Upload a Profile Photo</Form.Label>\n                <Form.Control\n                  type=\"file\"\n                  accept=\".jpg, .jpeg, .png\"\n                  name=\"profile-photo\"\n                  value={values.profilePhoto}\n                  // onChange={handleChange}\n                  onChange={event => setProfilePhoto(event.target.files[0])}\n                  isInvalid={!!errors.profilePhoto}\n                  isValid={touched.profilePhoto && !errors.profilePhoto}\n                />\n\n                <Form.Control.Feedback type=\"invalid\">\n                  Please upload a file\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group id=\"cv\" md=\"6\">\n                <Form.Label>Upload a CV</Form.Label>\n                <Form.Control\n                  type=\"file\"\n                  accept=\".pdf, .doc, .docx\"\n                  name=\"cv\"\n                  value={values.cv}\n                  onChange={event => setCV(event.target.files[0])}\n                  isInvalid={!!errors.cv}\n                  isValid={touched.cv && !errors.cv}\n                />\n\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.cv}\n                </Form.Control.Feedback>\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n              <Form.Group id=\"password\" md=\"3\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  value={values.password}\n                  onChange={event => setPassword(event.target.value)}\n                  isInvalid={!!errors.password}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.password}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group\n                id=\"password-confirm\"\n                md=\"3\"\n                controlId=\"validationFormik06\"\n              >\n                <Form.Label>Password Confirmation</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Confirm\"\n                  name=\"passwordConfirmation\"\n                  value={values.passwordConfirmation}\n                  onChange={event =>\n                    setPasswordConfirmation(event.target.value)\n                  }\n                  isInvalid={!!errors.passwordConfirmation}\n                />\n\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.passwordConfirmation}\n                </Form.Control.Feedback>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group>\n                <Form.Check\n                  required\n                  name=\"terms\"\n                  label=\"Agree to terms and conditions\"\n                  onChange={handleChange}\n                  isInvalid={!!errors.terms}\n                  feedback={errors.terms}\n                  id=\"validationFormik0\"\n                />\n              </Form.Group>\n              {error === true ? (\n                <div id=\"error\">\n                  Error: make sure you have filled out all details.\n                </div>\n              ) : (\n                \"\"\n              )}\n            </Form.Row>\n            <Button type=\"submit\">Submit form</Button>\n          </Form>\n        )}\n      </Formik>\n    );\n  } else if (error === false) {\n    return (\n      <SignUpProfile\n        profilePhoto={profilePhoto}\n        reserve={reserve}\n        day={day}\n        hour={hour}\n        minute={minute}\n        second={second}\n        id={id}\n      />\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    student: state.student\n  };\n};\n\nexport default connect(mapStateToProps)(StudentSignUpForm);\n"]},"metadata":{},"sourceType":"module"}